    let kArrow = ./../Function/Kind

in  let kProduct = ./../Tuple/Kind

in    λ(cObject : Kind)
    →     let dObject = Type
      
      in    λ(c : ./../Category/Monoidal/Kind kArrow kProduct cObject)
          → λ(d : ./../Category/Monoidal/Kind kArrow kProduct dObject)
          → ./../Monoid/Type
            (kArrow cObject dObject)
            (./../Category/Endofunctor/monoidal/applicative cObject c d)
