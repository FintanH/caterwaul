    let kArrow = ./../Function/Kind

in  let cObject = Type

in  let c = ./../Category/Set/monoidal/cartesian

in  let cpObject = Type

in  let cp = ./../Category/Set/monoidal/cartesian

in  let dObject = Type

in    λ(p : kArrow cObject cpObject)
    → λ(applicative : ./../Applicative/Type cObject c cp p)
    → λ(f : kArrow cObject dObject)
    → λ(a : cpObject)
    → λ(ran : ./Type cObject cpObject cp.arrow p f a)
    → ran a (λ(x : a) → applicative.identity a (λ(_ : c.identity) → x))
