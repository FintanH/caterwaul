--     let kArrow = ./../Function/Kind

-- in  let kProduct = ./../Tuple/Kind

-- in    λ(object : Kind)
--     → λ(arrow : kArrow (kProduct object object) Type)
--     → λ(product : kArrow (kProduct object object) object)
--     → λ(m : object)
--     → λ(record : { op : arrow { _1 = product { _1 = m, _2 = m }, _2 = m } })
--     → record ∧ { associativity = record.op (record.op a b) c }
<>
