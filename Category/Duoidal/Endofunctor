{- NB: `object` is fixed because of `Day/Type`.
-}
    let kArrow = ./../../Function/Kind

in  let kProduct = ./../../Tuple/Kind

in  let object = Type

in    λ(cat : ./../../Category/Monoidal/Type kArrow kProduct object)
    →   { arrow =
            ./../../NaturalTransformation/Type object object cat.arrow
        , additive =
            { identity =
                ./../../Identity/Type object
            , op =
                ./../../Day/Type object cat cat
            }
        , multiplicative =
            { identity =
                ./../../Identity/Type object
            , op =
                ./../../Compose/Type object object object
            }
        }
      : ./Type kArrow kProduct (kArrow object object)
