    let object = Type

in  let arrow = ./../Function/Type

in  let Reader = ./Type object arrow

in    λ(r : object)
    →   { identity =
            λ(a : object) → λ(x : a) → λ(_ : r) → x
        , op =
              λ(a : object)
            → λ(fa : Reader { _1 = r, _2 = Reader { _1 = r, _2 = a } })
            → λ(env : r)
            → fa env env
        }
      : ./../Monad/Type object arrow (λ(a : object) → Reader { _1 = r, _2 = a })
